Opening debug log at: 2018-10-22 19:00:34
Successfully imported ExampleActions!
ClyphX_Pro Library: v1.1.0 ------- Parent script: ClyphX_Pro ------- Live: 10.0.3
Logging config data
 -> can_send_and_receive_midi: True
 -> use_macrobat: True
 -> can_send_and_receive_osc: True
 -> use_settings_files: True
 -> use_xclips: True
 -> can_show_highlight: True
 -> use_xcues: True
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Preferences.txt
 -> VERSION = 1.0.5
 -> STARTUP_ACTIONS = NONE
 -> NAVIGATION_HIGHLIGHT = TRUE
 -> PROCESS_XCLIPS_IF_TRACK_MUTED = TRUE
 -> ALLOW_BAR_AND_BEAT_SPECS = TRUE
 -> SNAPSHOT_PARAMETER_LIMIT = 1000
 -> STORE_EXTENDED_MIX_SETTINGS = FALSE
 -> USE_HIGH_RES_SCHEDULER_FOR_RAMPING = TRUE
 -> UNSCHEDULE_WAITS_ON_PLAYBACK_STOP = TRUE
 -> INCOMING_OSC_PORT = 7005
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/X-Controls.txt
 -> LCXL_CC_1 = CC, 1, 32, 0, 127, $MK2_I_1$
 -> LCXL_CC_2 = CC, 1, 33, 0, 127, $MK2_I_2$
 -> LCXL_CC_3 = CC, 1, 34, 0, 127, $MK2_I_3$
 -> LCXL_CC_12 = CC, 1, 35, 0, 127, $MK2_I_12$
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/MIDI Rack-SysEx.txt
 -> motif arp i/o = 240 67 16 111 64 112 21 var 247, 0, 1
 -> motif arp type = 240 67 16 111 64 112 20 var 247, 0, 127
 -> motif mode = 240 67 16 111 10 0 1 var 247, 0, 3
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/X-OSC.txt
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Script Linking.txt
 -> VERSION = 1.0.0
 -> script_1 = arsenal_lp1_a
 -> script_2 = push
 -> link_type_1 = matched
 -> script_3 = none
 -> link_type_2 = horizontal
 -> script_4 = none
 -> link_type_3 = horizontal
 -> script_5 = none
 -> link_type_4 = horizontal
 -> script_6 = none
 -> link_type_5 = horizontal
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = IN "Arsenal PS1 A Input"
 -> %PUSH_IN_2% = IN "Arsenal PS2 A Input"
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN 'Arsenal_PS1_A Input (Ableton Push (User Port))'
 -> %PUSH_IN_2% = "PUSH"/IN 'Arsenal_PS2_A Input (Ableton Push 2 (User Port))'
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN 'Arsenal_PS1_A Input (Ableton Push (User Port))'
 -> %PUSH_IN_2% = "PUSH"/IN 'Arsenal_PS2_A Input (Ableton Push 2 (User Port))'
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN 'Arsenal_PS1_A Input (Ableton Push (User Port))'
 -> %PUSH_IN_2% = "PUSH"/IN 'Arsenal_PS2_A Input (Ableton Push 2 (User Port))'
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_2$ = %PUSH_IN_2%
 -> $PUSH_1$ = %PUSH_IN_1%
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_2$ = %PUSH_IN_2%
 -> $PUSH_1$ = %PUSH_IN_1%
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_2$ = %PUSH_IN_2%
 -> $PUSH_1$ = %PUSH_IN_1%
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel;
push_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel1;$push_1$;;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] DEBUG;%PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x12513dd98>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: debug
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel;
push_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel1;$push_1$;;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x12513d738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [flute1] $MK2_1_3$
xtrigger: <Clip.Clip object at 0x1251299e0>
is_off_trig: False
reset_seq: False
ident: flute1
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 2']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 2']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: FLUTE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_2$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9e10>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 1']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 1']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: DRIVE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_3$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9ed0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 2']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 2']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: FLUTE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: [] DEBUG;%PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x138c2ea68>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: debug
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel;
push_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel1;$push_1$;;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] DEBUG;%PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x19b012c00>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: debug
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel;
push_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel1;$push_1$;;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] DEBUG;%PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x19ae099e0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: debug
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel;
push_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel1;$push_1$;;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [flute1] $MK2_1_3$
xtrigger: <Clip.Clip object at 0x125129380>
is_off_trig: False
reset_seq: False
ident: flute1
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 2']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 2']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: FLUTE
_____________________________________________________________________
handle_action_list_trigger: [] REINIT;
xtrigger: <Clip.Clip object at 0x124b412f8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_2$ = %PUSH_IN_2%
 -> $PUSH_1$ = %PUSH_IN_1%
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
handle_action_list_trigger: [] REINIT;
xtrigger: <Clip.Clip object at 0x124bff9e0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_2$ = %PUSH_IN_2%
 -> $PUSH_1$ = %PUSH_IN_1%
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
handle_action_list_trigger: [] DEBUG;%PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x124bff848>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: debug
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel; cs "ARSENAL_PS2_A" dev lock;
push_1 = %push%(1) sel; %push_track_base% 1; %push%(1.1.1) sel; cs "ARSENAL_PS2_A" dev lock;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] DEBUG;%PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x19aec30d8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: debug
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_____________________________________________________________________
Logging user macros:
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%;
mk2_1_1 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(1) solo on; %mk2%(1.1.1.1) sel
mk2_1_2 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(2) solo on; %mk2%(1.1.1.2) sel
mk2_1_3 = %mk2%(1) sel; %mk2_track_base% 1; %mk2%(1.1.1) ch(all) solo off; %mk2%(1.1.1) ch(3) solo on; %mk2%(1.1.1.3) sel
mk2_2_1 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(1) solo on; %mk2%(1.2.1.1) sel
mk2_2_2 = %mk2%(1) sel; %mk2_track_base% 2; %mk2%(1.2.1) ch(all) solo off; %mk2%(1.2.1) ch(2) solo on; %mk2%(1.2.1.2) sel
mk2_i_1 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_2 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_3 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel;
mk2_i_12 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel;
mk2_i_23 = %mk2%(1) sel; %mk2_track_base% %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel;
mk2_i_sel = %mk2%(1.%tracki%.1.%mk2_insti%) sel
push_init = %push_user%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%;
push_2 = %push%(1) sel; %push_track_base% 2; %push%(1.2.1) sel; cs "ARSENAL_PS2_A" dev lock;
push_1 = %push%(1) sel; %push_track_base% 1; %push%(1.1.1) sel; cs "ARSENAL_PS2_A" dev lock;
push_sel = %push%(1.%tracki%.1) sel
push_i = %push%(1) sel; %push_track_base% %tracki%;
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x19aec3958>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH_IN_2%; $PUSH_INIT$;PUSH MSG "INITIALIZED";
xtrigger: <Clip.Clip object at 0x19aec3160>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: in
args: "PUSH"
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "INITIALIZED"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "INITIALIZED"']
action: arm
args: on
track_tokens: ['STRING: "INITIALIZED"']
action: vol
args: 107
track_tokens: ['STRING: "INITIALIZED"']
action: push
args: msg "INITIALIZED"
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: msg "INITIALIZED"
_____________________________________________________________________
handle_action_list_trigger: [] REINIT;
xtrigger: <Clip.Clip object at 0x19b19cd98>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_2$ = %PUSH_IN_2%
 -> $PUSH_1$ = %PUSH_IN_1%
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19b19c050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19b19ca68>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_2$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9e10>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 1']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 1']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: DRIVE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_3$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9ed0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 2']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 2']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: FLUTE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x138d00b78>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x124247a68>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x124247270>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19b03d270>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] REINIT;
xtrigger: <Clip.Clip object at 0x136a0f050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19ae09050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x138c5e9e0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19ae09050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x124223c88>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x199d2e160>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH_VERSION% = 2;%PUSH_IN_2%
xtrigger: <Clip.Clip object at 0x1374cf380>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: in
args: "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.adjust_input_type of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
args: "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x1374cf958>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x1374cf408>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x1374cf958>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x1374cf9e0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x136a9ef30>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x19aed1738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x1374cf9e0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_2$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9e10>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 1']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 1']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: DRIVE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_3$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9ed0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 2']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 2']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: FLUTE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_12$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e99d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 1']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_3$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9ed0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 2']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 2']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: FLUTE
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_2$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9e10>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 1']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 1']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: DRIVE
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH_VERSION% = 2;%PUSH_IN_2%
xtrigger: <Clip.Clip object at 0x139427380>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: in
args: "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.adjust_input_type of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
args: "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x12509d8d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x139427af0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x1394272f8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x139427958>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps1_a lock
action: arsenal
args: ps1_a e_mode 5
action: arsenal
args: ps1_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps1_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x139427f30>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x139427408>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x19ae09518>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 2
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x1394272f8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x1394278d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x139427f30>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x19b012050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x1394278d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x139427a68>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x19ae098d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x19acb5d98>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_1_1$; SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x12423f738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_1$;VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x12423f1e8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel1
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: $push_1$
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel1
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1393ff270>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1393ffa68>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x19aee8848>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x19aee8c88>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_1$
xtrigger: <Clip.Clip object at 0x12aa7bc00>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel1
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: $push_1$
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel1
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x12aa7b738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 2
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; 
xtrigger: <Clip.Clip object at 0x19aee8738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; 
xtrigger: <Clip.Clip object at 0x12aa7bc88>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; 
xtrigger: <Clip.Clip object at 0x19ae09518>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19aee8738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x19acdbc88>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 2
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL
xtrigger: <Clip.Clip object at 0x1251515a0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1;
xtrigger: <Clip.Clip object at 0x19acdb738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1;
xtrigger: <Clip.Clip object at 0x19aee8f30>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; 
xtrigger: <Clip.Clip object at 0x12aafff30>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1393fe7c0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x19aee8518>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1393fe628>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x19aee8628>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x19aee8b78>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "ARSENAL_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; %PUSH%(1.1.1)  CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1250fde20>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: dev
args: cs "ARSENAL_PS2_A" dev lock
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; %PUSH%(1.1.1)  CS "ARSENAL_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1250fdb78>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "ARSENAL_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: dev
args: cs "ARSENAL_PS2_A" dev lock
track_tokens: ['STRING: "ARSENAL_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; 
xtrigger: <Clip.Clip object at 0x19b146270>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x137188848>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x124bffb78>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x124bff8d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1250fd738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x1250fd1e8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x136c51738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19ae05848>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x19acb5d98>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x19acb5d10>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19b07d5a0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x12aaffc00>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x12aaff7c0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x12aaff490>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1393ff8d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1393ffa68>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x12423b9e0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x12423b1e8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x12423b8d0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x1393ff5a0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x1393ff408>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x139353050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x17a39a628>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x125097e20>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1250970d8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x17a39ac00>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x17a39a2f8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1374cf5a0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
xtrigger: <Clip.Clip object at 0x17a39a2f8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Arsenal_PS2_A"']
action: dev
args: sel
track_tokens: ['STRING: "Arsenal_PS2_A"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Arsenal_PS2_A" dev lock
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x136b12490>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x136b12050>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x12aaff5a0>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL;
xtrigger: <Clip.Clip object at 0x19b19c518>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
handle_action_list_trigger: $MK2_I_1$
xtrigger: <ClyphX_Pro.clyphx_pro.XControlComponent.CXButtonElement object at 0x19b3e9c50>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: MK2
track: MK2
device: BASS
_____________________________________________________________________
handle_action_list_trigger: [] REINIT; PUSH MODE LIVE;
xtrigger: <Clip.Clip object at 0x1371682f8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: reinit
action: push
args: mode live
_____________________________________________________________________
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%;
 -> $MK2_1_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(1) SOLO ON; %MK2%(1.1.1.1) SEL
 -> $MK2_1_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(2) SOLO ON; %MK2%(1.1.1.2) SEL
 -> $MK2_1_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 1; %MK2%(1.1.1) ch(all) SOLO OFF; %MK2%(1.1.1) ch(3) SOLO ON; %MK2%(1.1.1.3) SEL
 -> $MK2_2_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(1) SOLO ON; %MK2%(1.2.1.1) SEL
 -> $MK2_2_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% 2; %MK2%(1.2.1) ch(all) SOLO OFF; %MK2%(1.2.1) ch(2) SOLO ON; %MK2%(1.2.1.2) SEL
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL;
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL;
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2_TRACK_BASE% %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL;
 -> $MK2_I_SEL$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%;
 -> $PUSH_SEL$ = %PUSH%(1.%TRACKI%.1) SEL
 -> $PUSH_I$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% %TRACKI%;
 -> $PUSH_1$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
 -> $PUSH_2$ = %PUSH%(1) SEL; %PUSH_TRACK_BASE% 2; %PUSH%(1.2.1) SEL; CS "Arsenal_PS2_A" DEV LOCK;
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0 
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 2
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0 
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
_trigger_action: 
function: <bound method ClyphX_ProComponent.reinit_macros_and_variables of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x19b2b8c90>>
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode live
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x11b97dd98>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %TRACKI%=1;"PUSH"/SEL;"MK2"/SEL;
xtrigger: <Clip.Clip object at 0x139427628>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: sel
track_tokens: ['STRING: "PUSH"']
action: sel
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method TrackActions.select_track of <ClyphX_Pro.clyphx_pro.actions.TrackActions.TrackActions object at 0x19b2c8ad0>>
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_INIT$
xtrigger: <Clip.Clip object at 0x19b19cea8>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: mute
args: off
track_tokens: ['STRING: "MK2"']
action: arm
args: on
track_tokens: ['STRING: "MK2"']
action: vol
args: 107
track_tokens: ['STRING: "MK2"']
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_INIT$
xtrigger: <Clip.Clip object at 0x19b19c160>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: push
args: mode user
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: arsenal
args: ps2_a lock
action: arsenal
args: ps2_a e_mode 5
action: arsenal
args: ps2_a scl inkey off
action: mute
args: off
track_tokens: ['STRING: "PUSH"']
action: arm
args: on
track_tokens: ['STRING: "PUSH"']
action: vol
args: 107
track_tokens: ['STRING: "PUSH"']
_____________________________________________________________________
_trigger_action: 
function: <bound method PushActions.dispatch_push_action of <ClyphX_Pro.clyphx_pro.actions.PushActions.PushActions object at 0x19b2dc450>>
args: mode user
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x19b2328d0>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a e_mode 5
_____________________________________________________________________
_trigger_action: 
function: <bound method ArsenalActions.dispatch_arsenal_action of <ClyphX_Pro.clyphx_pro.actions.ArsenalActions.ArsenalActions object at 0x19b2dc250>>
args: ps2_a scl inkey off
_____________________________________________________________________
_trigger_action: mute
function: <function toggle_property at 0x199f3aed8>
args: off
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: arm
function: <function toggle_property at 0x199f3aed8>
args: on
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x124bffc00>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
handle_action_list_trigger: [] VOL 107;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x137168738>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: vol
args: 107
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: volume
function: <function adjust_track_mixer_param at 0x199f428c0>
args: 107
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x199f428c0>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] %PUSH%(1) SEL; %PUSH_TRACK_BASE% 1; %PUSH%(1.1.1) SEL; CS "Push2" DEV LOCK;
xtrigger: <Clip.Clip object at 0x1250fdc00>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "Push2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "Push2"']
action: dev
args: sel
track_tokens: ['STRING: "Push2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: cs
args: "Push2" dev lock
_____________________________________________________________________
_trigger_action: 
function: <bound method ControlSurfaceActions.dispatch_surface_action of <ClyphX_Pro.clyphx_pro.actions.ControlSurfaceActions.ControlSurfaceActions object at 0x19b2dc050>>
args: "Push2" dev lock
_____________________________________________________________________
