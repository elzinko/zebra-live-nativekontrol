Opening debug log at: 2018-10-28 17:02:34
Attempting to import user actions from /Applications/Ableton Live 10 Suite.app/Contents/App-Resources/MIDI Remote Scripts/ClyphX_Pro/clyphx_pro/user_actions.
Successfully imported ExampleActions!
ClyphX_Pro Library: v1.1.1 ------- Parent script: ClyphX_Pro ------- Live: 10.0.3
Logging config data
 -> can_send_and_receive_midi: True
 -> use_macrobat: True
 -> can_send_and_receive_osc: True
 -> use_settings_files: True
 -> use_xclips: True
 -> can_show_highlight: True
 -> use_xcues: True
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Macros.txt
 -> $MK2_1_1$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 1; "MK2"/dev(1.1.1) ch(all) SOLO OFF; "MK2"/dev(1.1.1) ch(1) SOLO ON; "MK2"/dev 1.1.1.1) SEL; DEVRIGHT
 -> $MK2_1_2$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 1; "MK2"/dev(1.1.1) ch(all) SOLO OFF; "MK2"/dev(1.1.1) ch(2) SOLO ON; "MK2"/dev(1.1.1.2) SEL; DEVRIGHT
 -> $MK2_1_3$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 1; "MK2"/dev(1.1.1) ch(all) SOLO OFF; "MK2"/dev(1.1.1) ch(3) SOLO ON; "MK2"/dev(1.1.1.3) SEL; DEVRIGHT
 -> $MK2_2_1$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 2; "MK2"/dev(1.2.1) ch(all) SOLO OFF; "MK2"/dev(1.2.1) ch(1) SOLO ON; "MK2"/dev(1.2.1.1) SEL; DEVRIGHT
 -> $MK2_2_2$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 2; "MK2"/dev(1.2.1) ch(all) SOLO OFF; "MK2"/dev(1.2.1) ch(2) SOLO ON; "MK2"/dev(1.2.1.2) SEL; DEVRIGHT
 -> $MK2_3_1$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 3; "MK2"/dev(1.3.1) ch(all) SOLO OFF; "MK2"/dev(1.3.1) ch(1) SOLO ON; "MK2"/dev(1.3.1.1) SEL; DEVRIGHT
 -> $MK2_3_2$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 3; "MK2"/dev(1.3.1) ch(all) SOLO OFF; "MK2"/dev(1.3.1) ch(2) SOLO ON; "MK2"/dev(1.3.1.2) SEL; DEVRIGHT
 -> $MK2_4_1$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 4; "MK2"/dev(1.4.1) ch(all) SOLO OFF; "MK2"/dev(1.4.1) ch(1) SOLO ON; "MK2"/dev(1.4.1.1) SEL; DEVRIGHT
 -> $MK2_4_2$ = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 4; "MK2"/dev(1.4.1) ch(all) SOLO OFF; "MK2"/dev(1.4.1) ch(2) SOLO ON; "MK2"/dev(1.4.1.2) SEL; DEVRIGHT
 -> $MK2_I_1$ = %MK2%(1) SEL; %MK2% set 0 0 0 0 0 0 0 %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL
 -> $MK2_I_2$ = %MK2%(1) SEL; %MK2% set 0 0 0 0 0 0 0 %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL
 -> $MK2_I_3$ = %MK2%(1) SEL; %MK2% set 0 0 0 0 0 0 0 %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.3) SEL
 -> $MK2_I_12$ = %MK2%(1) SEL; %MK2% set 0 0 0 0 0 0 0 %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(1) SOLO ON; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1.1) SEL
 -> $MK2_I_23$ = %MK2%(1) SEL; %MK2% set 0 0 0 0 0 0 0 %TRACKI%; %MK2%(1.%TRACKI%.1) ch(all) SOLO OFF; %MK2%(1.%TRACKI%.1) ch(2) SOLO ON; %MK2%(1.%TRACKI%.1) ch(3) SOLO ON; %MK2%(1.%TRACKI%.1.2) SEL
 -> $MK2_T_I$ = %MK2%(1.%TRACKI%.1.%MK2_INSTI%) SEL
 -> $MK2_INIT$ = %MK2_ON%; %MK2_ARM%; %MK2_VOL%
 -> $PUSH_I$ = "PUSH"/dev(1) SEL; "PUSH"/dev set 0 0 0 0 0 0 0 %TRACKI%; "PUSH"/dev(1.%TRACKI%.1) SEL
 -> $PUSH_1$ = "PUSH"/dev SEL; "PUSH"/dev set 0 0 0 0 0 0 0 1; "PUSH"/DEV CSEL %TRACKI%; "PUSH"/dev(1.1.1) SEL
 -> $PUSH_2$ = "PUSH"/dev(1) SEL; "PUSH"/dev set 0 0 0 0 0 0 0 2; "PUSH"/dev(1.2.1) SEL
 -> $PUSH_3$ = "PUSH"/dev(1) SEL; "PUSH"/dev set 0 0 0 0 0 0 0 3; "PUSH"/dev(1.3.1) SEL
 -> $PUSH_4$ = "PUSH"/dev(1) SEL; "PUSH"/dev set 0 0 0 0 0 0 0 4; "PUSH"/dev(1.4.1) SEL
 -> $PUSH_INIT$ = %PUSH_USER%; %PUSH_TRACK_SEL%; %PUSH_TRACK_SEL%; %PUSH_LOCK_TRACK%; %PUSH_DEVICE%; %PUSH_KEY%; %PUSH_ON%; %PUSH_ARM%; %PUSH_VOL%
 -> $RESET_ALL$ = %PUSH_RESET%; %MK2_RESET%; PUSH MODE LIVE
 -> $INST_SEL$ = "PUSH"/SEL; "MK2"/SEL
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Variables.txt
 -> %EX_VAR_1% = 10
 -> %EX_VAR_2% = (%EX_VAR_2% + 1)
 -> %EX_VAR_3% = (1 if %EX_VAR_2% % 2 == 0 else 0)
 -> %EX_VAR_4% = IN "Computer Keyboard"
 -> %TRACKI% = 1
 -> %ROOT% = %CTRLI%/dev
 -> %MK2% = "MK2"/dev
 -> %MK2_INSTI% = 1
 -> %MK2_ON% = "MK2"/MUTE OFF
 -> %MK2_ARM% = "MK2"/ARM ON
 -> %MK2_VOL% = "MK2"/VOL 107
 -> %MK2_RESET% = "MK2"/dev(1) SEL; "MK2"/dev set 0 0 0 0 0 0 0 0
 -> %MK2_TRACK_BASE% = %MK2% set 0 0 0 0 0 0 0
 -> %MK2_TRACK% = %MK2_TRACK_BASE% %TRACKI%
 -> %MK2_INST% = %MK2%(1.%TRACKI%.1)
 -> %MK2_INST_CSEL% = %MK2_INST% csel %INSTI%
 -> %MK2_SUBINST% = %MK2%(1.%TRACKI%.1.%INSTI%)
 -> %SOLOFF% = %MK2_INST% ch(all) SOLO OFF
 -> %SOLON% = %MK2_INST% ch(%INSTI%) SOLO ON
 -> %PUSH_VERSION% = 1
 -> %PUSH% = "PUSH"/dev
 -> %PUSH_RESET% = "PUSH"/dev(1) SEL; "PUSH"/dev set 0 0 0 0 0 0 0 0
 -> %PUSH_ON% = "PUSH"/MUTE OFF
 -> %PUSH_ARM% = "PUSH"/ARM ON
 -> %PUSH_VOL% = "PUSH"/VOL 107
 -> %PUSH_TRACK_BASE% = %PUSH% set 0 0 0 0 0 0 0
 -> %PUSH_LIVE% = PUSH MODE LIVE
 -> %PUSH_USER% = PUSH MODE USER
 -> %ARSENAL_SCRIPT% = ARSENAL_PS%PUSH_VERSION%_A
 -> %PUSH_LOCK_TRACK% = ARSENAL PS%PUSH_VERSION%_A LOCK
 -> %PUSH_DEV_LOCK% = CS "Arsenal PS%PUSH_VERSION%_A" DEV LOCK
 -> %PUSH_DEVICE% = ARSENAL PS%PUSH_VERSION%_A E_MODE 5
 -> %PUSH_KEY% = ARSENAL PS%PUSH_VERSION%_A SCL INKEY OFF
 -> %PUSH_TRACK% = %PUSH% SET 0 0 0 0 0 0 0 %TRACKI%
 -> %PUSH_SEL% = %PUSH%(1) SEL
 -> %PUSH_TRACK_SEL% = %PUSH%(1.%TRACKI%.1) SEL
 -> %PUSH_IN_1% = "PUSH"/IN "Arsenal_PS1_A Input (Ableton Push (User Port))"
 -> %PUSH_IN_2% = "PUSH"/IN "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
 -> %PUSH_0% = "PUSH"/dev(1) SEL; "PUSH"/dev set 0 0 0 0 0 0 0 0
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Preferences.txt
 -> VERSION = 1.0.5
 -> STARTUP_ACTIONS = NONE
 -> NAVIGATION_HIGHLIGHT = TRUE
 -> PROCESS_XCLIPS_IF_TRACK_MUTED = TRUE
 -> ALLOW_BAR_AND_BEAT_SPECS = TRUE
 -> SNAPSHOT_PARAMETER_LIMIT = 1000
 -> STORE_EXTENDED_MIX_SETTINGS = FALSE
 -> USE_HIGH_RES_SCHEDULER_FOR_RAMPING = TRUE
 -> UNSCHEDULE_WAITS_ON_PLAYBACK_STOP = TRUE
 -> INCOMING_OSC_PORT = 7005
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/X-Controls.txt
 -> LCXL_CC_1 = CC, 1, 32, 0, 127, $MK2_I_1$
 -> LCXL_CC_2 = CC, 1, 33, 0, 127, $MK2_I_2$
 -> LCXL_CC_3 = CC, 1, 34, 0, 127, $MK2_I_3$
 -> LCXL_CC_12 = CC, 1, 35, 0, 127, $MK2_I_12$
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/MIDI Rack-SysEx.txt
 -> motif arp i/o = 240 67 16 111 64 112 21 var 247, 0, 1
 -> motif arp type = 240 67 16 111 64 112 20 var 247, 0, 127
 -> motif mode = 240 67 16 111 10 0 1 var 247, 0, 3
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/X-OSC.txt
Attempting to read /Users/elzinko/nativeKONTROL/ClyphX_Pro/Script Linking.txt
 -> VERSION = 1.0.0
 -> script_1 = arsenal_lp1_a
 -> script_2 = push
 -> link_type_1 = matched
 -> script_3 = none
 -> link_type_2 = horizontal
 -> script_4 = none
 -> link_type_3 = horizontal
 -> script_5 = none
 -> link_type_4 = horizontal
 -> script_6 = none
 -> link_type_5 = horizontal
_____________________________________________________________________
Logging user variables:
ex_var_1 = 10
ex_var_2 = 1
ex_var_3 = 0
ex_var_4 = in "Computer Keyboard"
tracki = 1
root = 0/dev
mk2 = "MK2"/dev
mk2_insti = 1
mk2_on = "MK2"/mute off
mk2_arm = "MK2"/arm on
mk2_vol = "MK2"/vol 107
mk2_reset = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 0
mk2_track_base = "MK2"/dev set 0 0 0 0 0 0 0
mk2_track = "MK2"/dev set 0 0 0 0 0 0 0 1
mk2_inst = "MK2"/dev(1.1.1)
mk2_inst_csel = "MK2"/dev(1.1.1) csel 0
mk2_subinst = "MK2"/dev(1.1.1.0)
soloff = "MK2"/dev(1.1.1) ch(all) solo off
solon = "MK2"/dev(1.1.1) ch(0) solo on
push_version = 1
push = "PUSH"/dev
push_reset = "PUSH"/dev(1) sel; "PUSH"/dev set 0 0 0 0 0 0 0 0
push_on = "PUSH"/mute off
push_arm = "PUSH"/arm on
push_vol = "PUSH"/vol 107
push_track_base = "PUSH"/dev set 0 0 0 0 0 0 0
push_live = push mode live
push_user = push mode user
arsenal_script = arsenal_ps1_a
push_lock_track = arsenal ps1_a lock
push_dev_lock = cs "Arsenal PS%PUSH_VERSION%_A" dev lock
push_device = arsenal ps1_a e_mode 5
push_key = arsenal ps1_a scl inkey off
push_track = "PUSH"/dev set 0 0 0 0 0 0 0 1
push_sel = "PUSH"/dev(1) sel
push_track_sel = "PUSH"/dev(1.1.1) sel
push_in_1 = "PUSH"/in "Arsenal_PS1_A Input (Ableton Push (User Port))"
push_in_2 = "PUSH"/in "Arsenal_PS2_A Input (Ableton Push 2 (User Port))"
push_0 = "PUSH"/dev(1) sel; "PUSH"/dev set 0 0 0 0 0 0 0 0
_____________________________________________________________________
Logging user macros:
mk2_1_1 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 1; "MK2"/dev(1.1.1) ch(all) solo off; "MK2"/dev(1.1.1) ch(1) solo on; "MK2"/dev 1.1.1.1) sel; devright
mk2_1_2 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 1; "MK2"/dev(1.1.1) ch(all) solo off; "MK2"/dev(1.1.1) ch(2) solo on; "MK2"/dev(1.1.1.2) sel; devright
mk2_1_3 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 1; "MK2"/dev(1.1.1) ch(all) solo off; "MK2"/dev(1.1.1) ch(3) solo on; "MK2"/dev(1.1.1.3) sel; devright
mk2_2_1 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 2; "MK2"/dev(1.2.1) ch(all) solo off; "MK2"/dev(1.2.1) ch(1) solo on; "MK2"/dev(1.2.1.1) sel; devright
mk2_2_2 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 2; "MK2"/dev(1.2.1) ch(all) solo off; "MK2"/dev(1.2.1) ch(2) solo on; "MK2"/dev(1.2.1.2) sel; devright
mk2_3_1 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 3; "MK2"/dev(1.3.1) ch(all) solo off; "MK2"/dev(1.3.1) ch(1) solo on; "MK2"/dev(1.3.1.1) sel; devright
mk2_3_2 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 3; "MK2"/dev(1.3.1) ch(all) solo off; "MK2"/dev(1.3.1) ch(2) solo on; "MK2"/dev(1.3.1.2) sel; devright
mk2_4_1 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 4; "MK2"/dev(1.4.1) ch(all) solo off; "MK2"/dev(1.4.1) ch(1) solo on; "MK2"/dev(1.4.1.1) sel; devright
mk2_4_2 = "MK2"/dev(1) sel; "MK2"/dev set 0 0 0 0 0 0 0 4; "MK2"/dev(1.4.1) ch(all) solo off; "MK2"/dev(1.4.1) ch(2) solo on; "MK2"/dev(1.4.1.2) sel; devright
mk2_i_1 = %mk2%(1) sel; %mk2% set 0 0 0 0 0 0 0 %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1.1) sel
mk2_i_2 = %mk2%(1) sel; %mk2% set 0 0 0 0 0 0 0 %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.2) sel
mk2_i_3 = %mk2%(1) sel; %mk2% set 0 0 0 0 0 0 0 %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.3) sel
mk2_i_12 = %mk2%(1) sel; %mk2% set 0 0 0 0 0 0 0 %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(1) solo on; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1.1) sel
mk2_i_23 = %mk2%(1) sel; %mk2% set 0 0 0 0 0 0 0 %tracki%; %mk2%(1.%tracki%.1) ch(all) solo off; %mk2%(1.%tracki%.1) ch(2) solo on; %mk2%(1.%tracki%.1) ch(3) solo on; %mk2%(1.%tracki%.1.2) sel
mk2_t_i = %mk2%(1.%tracki%.1.%mk2_insti%) sel
mk2_init = %mk2_on%; %mk2_arm%; %mk2_vol%
push_i = "PUSH"/dev(1) sel; "PUSH"/dev set 0 0 0 0 0 0 0 %tracki%; "PUSH"/dev(1.%tracki%.1) sel
push_1 = "PUSH"/dev sel; "PUSH"/dev set 0 0 0 0 0 0 0 1; "PUSH"/dev csel %tracki%; "PUSH"/dev(1.1.1) sel
push_2 = "PUSH"/dev(1) sel; "PUSH"/dev set 0 0 0 0 0 0 0 2; "PUSH"/dev(1.2.1) sel
push_3 = "PUSH"/dev(1) sel; "PUSH"/dev set 0 0 0 0 0 0 0 3; "PUSH"/dev(1.3.1) sel
push_4 = "PUSH"/dev(1) sel; "PUSH"/dev set 0 0 0 0 0 0 0 4; "PUSH"/dev(1.4.1) sel
push_init = %push_user%; %push_track_sel%; %push_track_sel%; %push_lock_track%; %push_device%; %push_key%; %push_on%; %push_arm%; %push_vol%
reset_all = %push_reset%; %mk2_reset%; push mode live
inst_sel = "PUSH"/sel; "MK2"/sel
_____________________________________________________________________
_trigger_action: 
function: <bound method ClyphX_ProComponent.activate_debugging of <ClyphX_Pro.clyphx_pro.ClyphX_ProComponent.ClyphX_ProComponent object at 0x1aa553d50>>
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_1$; SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1aa2d9628>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: csel 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: csel 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x1a9d39e60>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x1a9d39e60>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $PUSH_1$; SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1a9b08380>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: csel 1
track_tokens: ['STRING: "PUSH"']
action: dev
args: sel
track_tokens: ['STRING: "PUSH"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: sel
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: set 0 0 0 0 0 0 0 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: csel 1
object: PUSH
track: PUSH
device: PUSH
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: sel
object: PUSH
track: PUSH
device: INST1
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x1a9d39e60>
args: a 0
object: PUSH
track: PUSH
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x1a9d39e60>
args: b 0
object: PUSH
track: PUSH
_____________________________________________________________________
handle_action_list_trigger: [] $MK2_1_1$;SEND A 0; SEND B 0;
xtrigger: <Clip.Clip object at 0x1aa4f3490>
is_off_trig: False
reset_seq: False
ident: None
ident has snap data: False
nature: 0
random_nature: False
_____________________________________________________________________
Actions:
action: dev
args: sel
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0']
action: dev
args: set 0 0 0 0 0 0 0 1
track_tokens: ['STRING: "MK2"']
action: dev
args: ch solo off
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['KEYWORD: all']
action: dev
args: ch solo on
track_tokens: ['STRING: "MK2"']
device_tokens: ['NUMBER: 0', 'DOT', 'NUMBER: 0', 'DOT', 'NUMBER: 0']
chain_tokens: ['NUMBER: 0']
action: dev
args: 1.1.1.1) sel
track_tokens: ['STRING: "MK2"']
action: devright
action: send
args: a 0
action: send
args: b 0
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: set 0 0 0 0 0 0 0 1
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: ch solo off
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: ch solo on
object: MK2
track: MK2
device: INST1
_____________________________________________________________________
_trigger_action: 
function: <bound method DeviceActions.dispatch_device_action of <ClyphX_Pro.clyphx_pro.actions.DeviceActions.DeviceActions object at 0x1aa45be50>>
args: 1.1.1.1) sel
object: MK2
track: MK2
device: MK2
_____________________________________________________________________
_trigger_action: 
function: <bound method NavAndViewActions.move_to_next_device of <ClyphX_Pro.clyphx_pro.actions.NavAndViewActions.NavAndViewActions object at 0x1aa560c90>>
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x1a9d39e60>
args: a 0
object: MK2
track: MK2
_____________________________________________________________________
_trigger_action: sends
function: <function adjust_track_mixer_param at 0x1a9d39e60>
args: b 0
object: MK2
track: MK2
_____________________________________________________________________
